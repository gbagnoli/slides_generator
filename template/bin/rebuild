#!/bin/bash

sources="slides.md Makefile"
SERVE=false
SERVE_PID=

usage() {
  echo "$0 [-h] [-s]"
  echo
  echo "Options:"
  echo "-h : show this help"
  echo "-s : call serve"
}

build() {
    # vim use move_self, we need to wait a bit or the file won't be found
    sleep 0.1
    make all
    res=$?
    [ $res -ne 0 ] && echo "--- FAILED BUILD ---" || echo "--- OK ---"
    return $res
}

serve() {
  $SERVE || return
  make serve &
  SERVE_PID=$!
  echo "You can know access the slides at http://localhost:3333/slides-dev.html"
}

darwin() {
  if ! command -v fswatch &>/dev/null; then
    echo >&2 "Missing fswtch. Make sure to install (i.e. brew install fswatch)"
    exit 1
  fi
  build
  serve
  while fswatch -1 slides.md; do
    build
  done
}

linux() {
  if ! command -v inotifywait &>/dev/null; then
    echo >&2 "Missing inotifywait. Make sure to install inotify-tools"
    exit 1
  fi

  build
  serve
  # shellcheck disable=SC2086
  while inotifywait -e move_self -e modify $sources; do
      build
  done
}

quit() {
  if [ -n "$SERVE_PID" ]; then
    kill "$SERVE_PID"
  fi
  exit
}

trap quit INT
while getopts "sh" opt; do

  case $opt in
    s)
      SERVE=true
      ;;
    h)
      usage
      exit 0
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      usage
      exit 1
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      exit 1
      ;;
  esac
done

if [[ "$(uname)" == "Darwin" ]]; then
  darwin
else
  linux
fi
